{"version":3,"sources":["../../../src/utils/asConst.ts"],"names":["asConst","narrowed"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAIC,QAAJ;AAAA,SAAuCA,QAAvC;AAAA,CAAhB","sourcesContent":["import type { Narrow } from \"~/type-utils\";\n\n/**\n * Returns the input parameter without muting it, but narrowing its inferred type.\n *\n * _(Similar to using the_ `as const` _statement functionnally)_\n *\n * ```ts\n * const object = { foo: \"bar\" }\n * // { foo: string }\n *\n * const narrowedObject = asConst({ foo: \"bar \"})\n * // => { foo: \"bar\" }\n * ```\n */\nexport const asConst = <A>(narrowed: Narrow<A>): Narrow<A> => narrowed;\n"],"file":"asConst.js"}