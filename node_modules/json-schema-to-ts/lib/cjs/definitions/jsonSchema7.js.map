{"version":3,"sources":["../../../src/definitions/jsonSchema7.ts"],"names":["$JSONSchema7","Symbol"],"mappings":";;;;;;AAEO,IAAMA,YAAY,GAAGC,MAAM,EAA3B","sourcesContent":["import type { JSONSchema7 as OriginalJSONSchema7 } from \"json-schema\";\n\nexport const $JSONSchema7 = Symbol();\nexport type $JSONSchema7 = typeof $JSONSchema7;\n\nexport type JSONSchema7 =\n  | boolean\n  | (Omit<\n      OriginalJSONSchema7,\n      | \"const\"\n      | \"enum\"\n      | \"items\"\n      | \"additionalItems\"\n      | \"contains\"\n      | \"properties\"\n      | \"patternProperties\"\n      | \"additionalProperties\"\n      | \"dependencies\"\n      | \"propertyNames\"\n      | \"if\"\n      | \"then\"\n      | \"else\"\n      | \"allOf\"\n      | \"anyOf\"\n      | \"oneOf\"\n      | \"not\"\n      | \"definitions\"\n      | \"examples\"\n      | \"default\"\n    > & {\n      [$JSONSchema7]?: $JSONSchema7;\n      const?: unknown;\n      enum?: unknown;\n      items?: JSONSchema7 | JSONSchema7[];\n      additionalItems?: JSONSchema7;\n      contains?: JSONSchema7;\n      properties?: Record<string, JSONSchema7>;\n      patternProperties?: Record<string, JSONSchema7>;\n      additionalProperties?: JSONSchema7;\n      dependencies?: {\n        [key: string]: JSONSchema7 | string[];\n      };\n      propertyNames?: JSONSchema7;\n      if?: JSONSchema7;\n      then?: JSONSchema7;\n      else?: JSONSchema7;\n      allOf?: JSONSchema7[];\n      anyOf?: JSONSchema7[];\n      oneOf?: JSONSchema7[];\n      not?: JSONSchema7;\n      nullable?: boolean;\n      definitions?: { [key: string]: JSONSchema7 };\n      // Required to avoid applying Readonly to Array interface, which results in invalid type (Array is treated as Object):\n      // https://github.com/ThomasAribart/json-schema-to-ts/issues/48\n      // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/0e40d820c92ec6457854fa6726bbff2ffea4e7dd/types/json-schema/index.d.ts#L590\n      // https://github.com/microsoft/TypeScript/issues/3496#issuecomment-128553540\n      examples?: unknown[];\n      // Required to allow array values in default field\n      // https://github.com/ThomasAribart/json-schema-to-ts/issues/80\n      default?: unknown;\n    });\n\nexport type JSONSchema7Reference = JSONSchema7 & { $id: string };\n"],"file":"jsonSchema7.js"}