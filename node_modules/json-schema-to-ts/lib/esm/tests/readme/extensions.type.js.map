{"version":3,"sources":["../../../../src/tests/readme/extensions.type.ts"],"names":["bigIntSchema","type","numberType","assertExtends","invalidSchema","assertNotExtends","assertBigInt","nestedSchema","properties","nested","required","additionalProperties","assertNestedBigInt"],"mappings":"AAQA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,QADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AASA,IAAMC,aAA4B,GAAG,CAArC;AACAA,aAAa;AAEb,IAAMC,aAAa,GAAG;AACpBH,EAAAA,IAAI,EAAE,QADc;AAEpBC,EAAAA,UAAU,EAAE;AAFQ,CAAtB;AASA,IAAMG,gBAAkC,GAAG,CAA3C;AACAA,gBAAgB;AAkBhB,IAAMC,YAA0B,GAAG,CAAnC;AACAA,YAAY;AAEZ,IAAMC,YAAY,GAAG;AACnBN,EAAAA,IAAI,EAAE,QADa;AAEnBO,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AACNP,MAAAA,UAAU,EAAE;AADN;AADE,GAFO;AAOnBQ,EAAAA,QAAQ,EAAE,CAAC,QAAD,CAPS;AAQnBC,EAAAA,oBAAoB,EAAE;AARH,CAArB;AA0BA,IAAMC,kBAAsC,GAAG,CAA/C;AACAA,kBAAkB","sourcesContent":["import type { A } from \"ts-toolbelt\";\n\nimport type { ExtendedJSONSchema, FromExtendedSchema } from \"~/index\";\n\ntype CustomProps = {\n  numberType: \"int\" | \"float\" | \"bigInt\";\n};\n\nconst bigIntSchema = {\n  type: \"number\",\n  numberType: \"bigInt\",\n} as const;\n\ntype AssertExtends = A.Extends<\n  typeof bigIntSchema,\n  ExtendedJSONSchema<CustomProps>\n>;\nconst assertExtends: AssertExtends = 1;\nassertExtends;\n\nconst invalidSchema = {\n  type: \"number\",\n  numberType: \"bigIntt\",\n} as const;\n\ntype AssertNotExtends = A.Extends<\n  typeof invalidSchema,\n  ExtendedJSONSchema<CustomProps>\n>;\nconst assertNotExtends: AssertNotExtends = 0;\nassertNotExtends;\n\ntype BigInt = FromExtendedSchema<\n  CustomProps,\n  typeof bigIntSchema,\n  {\n    deserialize: [\n      {\n        pattern: {\n          type: \"number\";\n          numberType: \"bigInt\";\n        };\n        output: bigint;\n      },\n    ];\n  }\n>;\ntype AssertBigInt = A.Equals<BigInt, bigint>;\nconst assertBigInt: AssertBigInt = 1;\nassertBigInt;\n\nconst nestedSchema = {\n  type: \"object\",\n  properties: {\n    nested: {\n      numberType: \"bigInt\",\n    },\n  },\n  required: [\"nested\"],\n  additionalProperties: false,\n} as const;\n\ntype NestedBigInt = FromExtendedSchema<\n  CustomProps,\n  typeof nestedSchema,\n  {\n    deserialize: [\n      {\n        pattern: {\n          numberType: \"bigInt\";\n        };\n        output: bigint;\n      },\n    ];\n  }\n>;\ntype AssertNestedBigInt = A.Equals<NestedBigInt, { nested: bigint }>;\nconst assertNestedBigInt: AssertNestedBigInt = 1;\nassertNestedBigInt;\n"],"file":"extensions.type.js"}